<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.insaproject.mapper.EmployeeMapper">

<!--모든 사원 출력-->
    <select id="getAllEmployee" resultType="Employee">
        SELECT
        empno,
        deptno,
        eval_grade,
        ename,
        age,
        gender,
        position,
        status,
        sal
        FROM employee
    </select>

    <!--사원 등록 -->
    <insert id="insertEmployee" parameterType="Employee">
    insert into employee(empno, deptno, eval_grade, ename, age, gender, position, status, sal)
        values (#{empno}, #{deptno}, #{evalGrade}, #{ename}, #{age}, #{gender}, #{position}, #{status}, #{sal})
    </insert>

    <!--사원번호 중복 체크 -->
    <select id="empnoDuplicateCheck" parameterType="int" resultType="int">
        select count(*) from employee where empno=#{empno}
    </select>

    <!-- 한 명의 사원 정보 불러오기 -->

    <resultMap type="Department" id="Department">
        <result column="DEPTNO" property="deptno"/>
        <result column="DNAME" property="dname"/>
    </resultMap>

    <resultMap type="Evaluation" id="Evaluation">
        <result column="EVAL_GRADE" property="evalGrade"/>
        <result column="SAL_CHANGE" property="salChange"/>
        <result column="PROMOTION" property="promotion"/>
    </resultMap>


    <resultMap type="EmployeeOneInfo" id="EmployeeOneInfo">
        <result column = "EMPNO" property="empno"/>
        <result column = "DEPTNO" property="deptno"/>
        <result column = "EVAL_GRADE" property="evalGrade"/>
        <result column = "ENAME" property="ename"/>
        <result column = "AGE" property="age"/>
        <result column = "GENDER" property="gender"/>
        <result column = "POSITION" property="position"/>
        <result column = "STATUS" property="status"/>
        <result column = "SAL" property="sal"/>
        <collection property="department" resultMap="Department"/>
        <collection property="evaluation" resultMap="Evaluation"/>
    </resultMap>


    <select id="getEmployeeOneInfo" parameterType="int" resultMap="EmployeeOneInfo">
        select empl.empno, empl.deptno, empl.eval_grade, empl.ename, empl.age, empl.gender, empl.position,
        empl.status, empl.sal, dept.deptno, dept.dname, eval.eval_grade, eval.sal_change, eval.promotion
        from employee empl join department dept
                            on empl.deptno=dept.deptno
                           join evaluation eval
                            on empl.eval_grade = eval.eval_grade
                            where empl.empno = #{empno}
    </select>

    <!--한 명의 Employee만의 정보 가져오기 -->
    <select id="getOneEmployee" parameterType="int" resultType="Employee">
        SELECT
        empno,
        deptno,
        eval_grade,
        ename,
        age,
        gender,
        position,
        status,
        sal
        FROM employee
        where empno = #{empno}
    </select>

    <!-- 한 명의 사원 정보 수정 -->
    <update id="updateOneEmplInfo" parameterType="Employee">
        update employee
        set deptno = #{deptno},
        eval_grade = #{evalGrade},
        ename = #{ename},
        age = #{age},
        gender = #{gender},
        position = #{position},
        status = #{status},
        sal = #{sal}
        where empno = #{empno}
    </update>




</mapper>
